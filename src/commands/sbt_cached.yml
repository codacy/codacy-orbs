description: >
  Run a generic Sbt command restoring the cache before and saving it after

parameters:
  cmd_name:
    description: "Name of the step"
    type: string
    default: ""
  cmd:
    description: "SBT command to run"
    type: string
  save_cache:
    description: "Save the cache after the command is executed"
    type: boolean
    default: true
  cache_prefix:
    description: "The prefix of cache to be used"
    type: string
    default: sbt-cache-032020

steps:

  - restore_cache:
      keys:
        - << parameters.cache_prefix >>-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
        - << parameters.cache_prefix >>-{{ .Branch }}-{{ checksum "build.sbt" }}
        - << parameters.cache_prefix >>-{{ .Branch }}
        - << parameters.cache_prefix >>

  - when:
      condition: <<parameters.cmd_name>>
      steps:
        - run:
            name: Unpacking Caches
            command: |
              if [[ -f "$HOME/targets.tar.gz" ]]; then
                echo "cache found"
                if [[ -d "target" ]]; then
                  echo "local workspace exists, skipping"
                else
                  echo "unpacking cache" && tar -xf ~/targets.tar.gz
                fi
              else
                echo "no cache found"
              fi
        - run:
            name: << parameters.cmd_name >>
            command: << parameters.cmd >>

  - unless:
      condition: <<parameters.cmd_name>>
      steps:
        - run:
            name: Unpacking Caches
            command: |
              if [[ -f "$HOME/targets.tar.gz" ]]; then
                echo "cache found"
                if [[ -d "target" ]]; then
                  echo "local workspace exists, skipping"
                else
                  echo "unpacking cache" && tar -xf ~/targets.tar.gz
                fi
              else
                echo "no cache found"
              fi
        - run:
            name: SBT command - << parameters.cmd >>
            command: << parameters.cmd >>

  - when:
      condition: <<parameters.save_cache>>
      steps:
        - run:
            name: CleanCache
            command: |
              set +eo pipefail
              find $HOME/.sbt -name "*.lock" | xargs rm | true
              find $HOME/.ivy2 -name "ivydata-*.properties" | xargs rm | true
              # Workaround for this Sbt issue in CircleCI
              # https://github.com/sbt/sbt/issues/4168
              find -name target -type d -exec tar -zcf ~/targets.tar.gz -H posix {} + | true
              find -name target -type d -exec rm -r {} + | true

        - save_cache:
            key: << parameters.cache_prefix >>-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
            paths:
              - "~/.ivy2"
              - "~/.sbt"
              - "~/.m2"
              - "~/.cache"
              - "~/targets.tar.gz"
