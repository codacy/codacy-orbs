description: "A job to deploy latest dev components to self-hosted"

executor: do

parameters:
  chart_name:
    description: The helm release name to be installed.
    type: string
    default: "default-release"
  environment:
    description: The target environment for the release [dev / sandbox / release].
    type: string
    default: "dev"
  helm_install_extra_flags:
    description: Extra parameters to be passed to the helm install command.
    type: string
    default: ""

steps:
  - run:
      name: Set cluster to digital ocean
      command: |
        doctl auth init -t $DO_TOKEN &>/dev/null
        doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
  - run:
      name: Add unstable repository
      command: |
        helm repo add codacy-unstable https://charts.codacy.com/unstable
        helm repo update
  - deploy:
      name: Fetch values files
      command: |
        curl -s -o values-production.yaml https://raw.githubusercontent.com/codacy/chart/master/codacy/values-production.yaml
        curl -s -o values.yaml https://raw.githubusercontent.com/codacy/chart/master/codacy/values.yaml

        echo -e "credentials \"app.terraform.io\" { \n  token = \"$TF_AUTH_TOKEN\" \n}" > ./terraformrc
        echo -e "terraform {\n  required_version = \"~> 0.12\"\n  backend \"remote\" {\n    hostname = \"app.terraform.io\"\n    organization = \"codacy\"\n\n    workspaces {\n      prefix = \"codacy-do-\"\n    }\n  }\n}" > config.tf

        echo -e "postgres-<<parameters.environment>>" > .terraform/environment
        TF_IN_AUTOMATION=1 TF_CLI_CONFIG_FILE=./terraformrc terraform init -input=false -reconfigure

        TF_IN_AUTOMATION=1 TF_CLI_CONFIG_FILE=./terraformrc terraform output -json > terraform_outputs.json
        host=$(cat terraform_outputs.json | jq -r '.db_cluster_host | .value')
        port=$(cat terraform_outputs.json | jq -r '.db_cluster_port | .value')
        username=$(cat terraform_outputs.json | jq -r '.db_cluster_username | .value')
        password=$(cat terraform_outputs.json | jq -r '.db_cluster_password | .value')

        sed -i values-production.bak "s/<--- codacy-db-username --->/$username/g; s/<--- codacy-db-password --->/$password/g; s/<--- codacy-db-host --->/$host/g; s/<--- codacy-db-port --->/$port/g;" values-production.yaml

  - deploy:
      name: Install component
      command: |
        version=$(helm search repo codacy-unstable/<< parameters.chart_name >> --devel -o json | jq -r ".[] | .version")

        helm upgrade --install <<parameters.chart_name>> codacy-unstable/<<parameters.chart_name>> \
        --devel \
        --atomic \
        --timeout=600s \
        --namespace codacy-<<parameters.environment>> \
        -f values.yaml \
        -f values-production.yaml \
        --version $version \
        <<parameters.helm_install_extra_flags>>
