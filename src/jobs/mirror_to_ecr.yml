description: Mirror Docker image to ECR

parameters:
  source_name:
    description: Name of the source docker image
    type: string
  source_tag:
    description: Tag of the source docker image
    type: string
  mirror_name:
    description: Name of the mirror docker image in ECR. If empty then the source_name is used.
    type: string
    default: ""
  mirror_tag:
    description: Tag of the mirror docker image in ECR. If empty then the source_tag is used.
    type: string
    default: ""
  force:
    description: If true then force mirroring the image even if it already exists in ECR
    type: boolean
    default: false
  tag_as_latest:
    description: If true then also tag mirror image as latest
    type: boolean
    default: false
  aws_profile:
    description: The AWS profile to be used
    type: string
    default: "default"
  region:
    description: The AWS region for the deployment
    type: string
    default: eu-west-1

executor: machine

environment:
  AWS_PROFILE: << parameters.aws_profile >>
  AWS_DEFAULT_REGION: << parameters.region >>

steps:
  - attach_workspace:
      at: ~/workdir
  - run_aws:
      cmd_name: Mirroring image to ECR repository
      deploy: true
      cmd: |
        echo "Loging in to Dockerhub..."
        docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

        export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        export ECR_URL=${ACCOUNT_ID}.dkr.ecr.<< parameters.region >>.amazonaws.com
        export ECR_PASSWORD=$(aws ecr get-login-password --region << parameters.region >>)
        echo "Loging in to ECR: ${ECR_URL}"
        docker login -u AWS -p ${ECR_PASSWORD} ${ECR_URL}

        SRC_NAME="<< parameters.source_name >>"
        SRC_TAG="<< parameters.source_tag >>"
        SRC="${SRC_NAME}:${SRC_TAG}"

        MIRROR_NAME="<< parameters.mirror_name >>"
        if [[ -z ${MIRROR_NAME} ]] ; then
          MIRROR_NAME="${SRC_NAME}"
        fi

        MIRROR_TAG="<< parameters.mirror_tag >>"
        if [[ -z ${MIRROR_TAG} ]] ; then
          MIRROR_TAG="${SRC_TAG}"
        fi
        MIRROR="${MIRROR_NAME}:${MIRROR_TAG}"

        echo "Mirroring ${SRC} to ${ECR_URL}/${MIRROR}..."
        REPO_DATA=$(aws ecr describe-images --repository-name=${MIRROR_NAME} --image-ids=imageTag=${MIRROR_TAG} ||: )
        if << parameters.force>> || [[ -z $REPO_DATA ]] ; then
          docker pull ${SRC}
          docker tag  ${SRC} ${ECR_URL}/${MIRROR}
          docker push ${ECR_URL}/${MIRROR}
          if << parameters.tag_as_latest >> ; then
            docker tag  ${SRC} ${ECR_URL}/${MIRROR_NAME}:latest
            docker push ${ECR_URL}/${MIRROR_NAME}:latest
          fi
        else
          echo "${MIRROR} image is already in ECR"
        fi
