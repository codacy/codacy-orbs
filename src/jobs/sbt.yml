description: "Default sbt job"

docker:
  - image: "cimg/openjdk:<< parameters.openjdk_version >>"

working_directory: ~/workdir

parameters:
  steps:
    description: "Steps to run"
    type: steps
    default: []
  steps_before_sbt:
    description: "Steps to run before Sbt starts"
    type: steps
    default: []
  cmd:
    description: "SBT command to run"
    type: string
    default: ""
  cache_prefix:
    description: "The prefix of cache to be used"
    type: string
    default: sbt-cache-032020
  aws_profile:
    description: "The AWS profile to be used"
    type: string
    default: "default"
  region:
    description: "The AWS region for the deployment"
    type: string
    default: eu-west-1
  credentials_file_content:
    description: "AWS credentials file contents to grant access for the step"
    type: string
    default: |
      [default]
      aws_access_key_id=$ACCESS_KEY_ID
      aws_secret_access_key=$SECRET_ACCESS_KEY
      [maven]
      source_profile = default
      role_arn = arn:aws:iam::$AWS_ACCOUNT_ID_PRODUCTION:role/$MAVEN_PUBLISHER_ROLE
  persist_to_workspace:
    description: "Whether to persist the workspace or not at the end of the job"
    type: boolean
    default: false
  openjdk_version:
    description: "CircleCI OpenJDK image version from https://hub.docker.com/r/cimg/openjdk/tags"
    type: string
    default: "8.0.402"
  store_test_results:
    description: "Whether to upload the test results back to CircleCI"
    type: boolean
    default: false
  no_output_timeout:
    description: "The time to wait for the command without output"
    type: string
    default: "15m"
  use_sbt_native_client:
    description: "Use the sbt thin client"
    type: boolean
    default: false
  setup_docker_scout:
    description: "Install and setup docker scout plugin to scan for docker image vulnerabilities"
    type: boolean
    default: false
  docker_scout_version:
    description: "Version of the docker scout plugin to use"
    type: string
    default: "0.13.1"
  save_cache:
    description: "Whether to save the cache or not at the end of the job"
    type: boolean
    default: true

environment:
  AWS_PROFILE: << parameters.aws_profile >>
  AWS_DEFAULT_REGION: << parameters.region >>

steps:
  - attach_workspace:
      at: ~/workdir
  - when:
      condition: << parameters.setup_docker_scout >>
      steps:
        - run:
            name: Download and install docker scout << parameters.docker_scout_version >>
            command: |
              curl -L https://github.com/docker/scout-cli/releases/download/v<< parameters.docker_scout_version >>/docker-scout_<< parameters.docker_scout_version  >>_linux_amd64.tar.gz -o docker-scout.tar.gz
              mkdir -p $HOME/.docker/cli-plugins
              tar -xvzf docker-scout.tar.gz -C $HOME/.docker/cli-plugins
              chmod +x $HOME/.docker/cli-plugins/docker-scout
  - run:
      name: Setup AWS Credentials
      command: |
        mkdir -p ~/.aws && touch ~/.aws/credentials
        cat >> ~/.aws/credentials \<< EOF
        << parameters.credentials_file_content >>
        EOF
  - run:
      name: Uncompress local targets
      command: |
        if [[ -f "targets.tar.gz" ]]; then
          echo "unpacking persisted workspace" && tar -xf targets.tar.gz
        else
          echo "no persisted workspace found"
        fi
  - sbt_cached:
      steps: << parameters.steps >>
      steps_before_sbt: << parameters.steps_before_sbt >>
      cmd: << parameters.cmd >>
      cache_prefix: << parameters.cache_prefix >>
      store_test_results: << parameters.store_test_results >>
      no_output_timeout: << parameters.no_output_timeout >>
      use_sbt_native_client: << parameters.use_sbt_native_client >>
      save_cache: << parameters.save_cache >>
  - when:
      condition: << parameters.persist_to_workspace >>
      steps:
        - run:
            name: Compressing targets
            command: |
              find -name target -type d -exec tar -zcf targets.tar.gz -H posix {} + | true
              find -name target -type d -exec rm -rf {} + | true
        - persist_to_workspace:
            root: ~/workdir
            paths:
              - '*'
              - targets.tar.gz
