description: "Sbt job using Docker executor"

executors:
  jdk:
    tag: "<< parameters.openjdk_version >>"

parameters:
  steps:
    description: "Steps to run"
    type: steps
    default: []
  steps_before_sbt:
    description: "Steps to run before sbt starts"
    type: steps
    default: []
  cache_prefix:
    description: "Prefix of cache to use"
    type: string
    default: sbt-cache-062022
  aws_profile:
    description: "AWS profile to be used"
    type: string
    default: "default"
  credentials_file_content:
    description: "AWS credentials file contents to grant access for the step"
    type: string
    default: |
      [default]
      aws_access_key_id=$ACCESS_KEY_ID
      aws_secret_access_key=$SECRET_ACCESS_KEY
      [maven]
      source_profile = default
      role_arn = arn:aws:iam::$AWS_ACCOUNT_ID_PRODUCTION:role/$MAVEN_PUBLISHER_ROLE
  persist_to_workspace:
    description: "Whether to persist the workspace at the end of the job"
    type: boolean
    default: false
  openjdk_version:
    description: "CircleCI OpenJDK image version"
    type: string
    default: "8.0.402"
  use_sbt_native_client:
    description: "Whether to use sbt thin client"
    type: boolean
    default: true
  no_output_timeout:
    description: "Time to wait for sbt command to complete without output"
    type: string
    default: "10m"
  setup_remote_docker:
    description: "Setup remote docker to run docker commands"
    type: boolean
    default: true
  setup_docker_scout:
    description: "Install and setup docker scout plugin to scan for docker image vulnerabilities"
    type: boolean
    default: false
  docker_scout_version:
    description: "Version of the docker scout plugin to use"
    type: string
    default: "0.13.1"
  save_cache:
    description: "Whether to save the cache or not at the end of the job"
    type: boolean
    default: true

environment:
  AWS_PROFILE: << parameters.aws_profile >>
  AWS_DEFAULT_REGION: eu-west-1

steps:
  - attach_workspace:
      at: ~/workdir
  - run:
      name: Download and install sbt
      command: |
        # get rid of the pre-installed sbt
        sudo rm -rf /opt/sbt/
        sbt_version=$(cat project/build.properties | grep sbt.version | sed "s/ *sbt\.version *= *//")
        wget https://repo.scala-sbt.org/scalasbt/debian/sbt-$sbt_version.deb
        sudo dpkg -i sbt-$sbt_version.deb
        rm -f sbt-$sbt_version.deb
  - run:
      name: Setup AWS Credentials
      command: |
        mkdir -p ~/.aws && touch ~/.aws/credentials
        cat >> ~/.aws/credentials \<< EOF
        << parameters.credentials_file_content >>
        EOF
  - when:
      condition: << parameters.setup_remote_docker >>
      steps:
        - setup_remote_docker:
            version: docker24
  - when:
      condition: << parameters.setup_docker_scout >>
      steps:
        - run:
            name: Download and install docker scout << parameters.docker_scout_version >>
            command: |
              curl -L https://github.com/docker/scout-cli/releases/download/v<< parameters.docker_scout_version >>/docker-scout_<< parameters.docker_scout_version  >>_linux_amd64.tar.gz -o docker-scout.tar.gz
              mkdir -p $HOME/.docker/cli-plugins
              tar -xvzf docker-scout.tar.gz -C $HOME/.docker/cli-plugins
              chmod +x $HOME/.docker/cli-plugins/docker-scout

  - sbt_cached:
      steps: << parameters.steps >>
      steps_before_sbt: << parameters.steps_before_sbt >>
      cache_prefix: << parameters.cache_prefix >>
      no_output_timeout: << parameters.no_output_timeout >>
      use_sbt_native_client: << parameters.use_sbt_native_client >>
      save_cache: << parameters.save_cache >>

  - when:
      condition: << parameters.persist_to_workspace >>
      steps:
        - persist_to_workspace:
            root: ~/workdir
            paths:
              - "*"
