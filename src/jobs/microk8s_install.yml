description: "Install a chart to microk8s"

parameters:
  chart_name:
    description: "Name of the chart to install"
    type: string
    default: "codacy"
  chart_version:
    description: "Chart version to install. If empty then the latest is installed"
    type: string
    default: ""
  helm_repo:
    type: string
    default: "https://charts.codacy.com/stable"
  helm_version:
    description: "Helm version used to install the chart"
    type: string
    default: "v2.15.1"
  microk8s_channel:
    description: "Microk8s version used"
    type: string
    default: "1.15/stable"
  namespace:
    description: "Namespace where to install the chart"
    type: string
    default: "codacy"
  microk8s_values_content:
    description: "Content for microk8s-values.yaml, used to override chart default values"
    type: string
    default: |
      global:
        imagePullSecrets:
          - name: docker-credentials
      listener:
        persistence:
          claim:
            size: 8Gi
        nfsserverprovisioner:
          persistence:
            size: 10Gi
      minio:
        persistence:
          size: 10Gi
      rabbitmq-ha:
        replicaCount: 1

executor: machine

steps:
  - attach_workspace:
      at: ~/workdir

  - run:
      name: Setup microk8s and helm
      command: |
        # install storage addon dependencies
        sudo apt update && sudo apt install nfs-common -y

        # enable traffic forwarding, which might not be done automatically for earlier microk8s versions
        # see https://github.com/ubuntu/microk8s/tree/1.12#my-pods-cant-reach-the-internet-but-my-microk8s-host-machine-can
        sudo iptables -P FORWARD ACCEPT

        # install microk8s and selected addons
        sudo snap install microk8s --classic --channel << parameters.microk8s_channel >>
        export PATH=$PATH:/snap/bin
        sudo microk8s.start && sudo microk8s.status --wait-ready
        sudo microk8s.enable ingress dns storage && sudo microk8s.status --wait-ready

        # restart to make sure the apparmor profile is correctly created
        # see https://github.com/ubuntu/microk8s/issues/493#issuecomment-498167435
        sudo microk8s.stop && sudo microk8s.start && sudo microk8s.status --wait-ready

        # Wait for addons to be ready, particularly kube-dns and hostpath-provisioner, or pods will quickly enter a crashloop
        sudo microk8s.kubectl wait -n kube-system --for=condition=Ready pod -l k8s-app=kube-dns --timeout=300s
        sudo microk8s.kubectl wait -n kube-system --for=condition=Ready pod -l k8s-app=hostpath-provisioner --timeout=300s
        sudo microk8s.kubectl wait -n default --for=condition=Ready pod -l app=default-http-backend --timeout=300s
        sudo microk8s.kubectl wait -n default --for=condition=Ready pod -l name=nginx-ingress-microk8s --timeout=300s

        # install helm
        HELM_PKG=helm-<< parameters.helm_version >>-linux-amd64.tar.gz
        wget https://get.helm.sh/$HELM_PKG
        tar xvzf $HELM_PKG
        sudo mv linux-amd64/tiller linux-amd64/helm /usr/local/bin
        rm -rvf $HELM_PKG linux-amd64/

        # install tiller and wait for it to be ready
        sudo microk8s.kubectl create serviceaccount --namespace kube-system tiller
        sudo microk8s.kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
        sudo helm init --service-account tiller
        sudo microk8s.kubectl -n kube-system wait --for=condition=Ready pod -l name=tiller --timeout=300s

  - run:
      name: Create values file
      command: |
        cat \<< END_VALUES > microk8s-values.yaml
        << parameters.microk8s_values_content >>
        END_VALUES

  - deploy:
      name: Install to microk8s from chart repo
      command: |
        sudo helm repo add default << parameters.helm_repo >>

        # if chart_version is an empty string then the latest version of the chart is installed
        sudo helm install --name << parameters.chart_name >> default/<< parameters.chart_name >> \
          --namespace << parameters.namespace >> -f microk8s-values.yaml --version "<< parameters.chart_version >>"
